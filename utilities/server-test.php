<?php

if( isset($_GET['a']) && $_GET['a'] == 'phpinfo' )
{
    phpinfo();
    exit;
}

list($a,$b,$c) = explode('.', PHP_VERSION);
$is_php5 = $a > 4;

if( $is_php5 ) eval(base64_decode(''));

?>

<html>
<head>
  <title>Server Test Script</title>
  <style>
  * {
    font-family: 'Trebuchet MS';
    font-size: 10pt;
  }

  td {
    border-bottom: 1px dotted #afafaf;
    border-right: 1px dotted #afafaf;
  }

  tr:first-child td {
      border-top: 1px dotted #afafaf;
  }

  td:first-child
  {
      border-left: 1px dotted #afafaf;
  }

  .h2 {
    font-size: 18pt;
    font-weight: bold;
    margin-bottom: 10px;
  }

  .passed {
    font-weight: bold;
    background-color: green;
    color: #fff;
  }

  .failed {
    font-weight: bold;
    background-color: red;
    color: #fff;
  }

  .failed a {
    color: yellow;
  }

  .warn {
    font-weight: bold;
    background-color: orange;
    color: #fff;
  }

  div.passed,
  div.failed,
  div.warn {
    padding: 6px;
    margin: 8px;
  }

  span.warn {
    padding: 0px 3px;
  }

  a.vps {
    font-size: 110%;
    font-weight: bold;
    color: #a25dba;
    text-decoration: none;
  }

  a.vps > span {
    font-size: 110%;
    display: inline-block;
    width: 1000px;
    color: #a25dba;
    margin: 0px auto 15px;
    padding: 6px;
    text-align: center;
    background-color: #f6e7fd;
    border: 1px solid #c38dd4;
    -moz-border-radius: 5px;
    -moz-box-shadow: 0px 0px 6px #aaa;
    -webkit-border-radius: 5px;
    -webkit-box-shadow: 0px 0px 6px #aaa;
  }
  </style>
</head>
<body>

<div style="text-align: center">
<div class="h2">TubeX Server Test Script</div>

<a href="http://manage.aff.biz/z/155/CD3560/" target="_blank" class="vps">
<span>
VPS.net hosting offers a pre-configured setup that has all of the requirements for TubeX, with prices starting under $20/month<br />
You can be setup and running with a fully compatible and scalable system in a matter of minutes!!</a>
</span>
</a>

<br />

<?php if( !$is_php5 ): ?>
<table width="1000" align="center" border="0" cellpadding="5" cellspacing="0">
<tr>
<td class="failed" align="center" style="font-size: 16pt;">
PHP version 5.2.0+ is required for this software.<br />
Your server is running PHP version <?php echo PHP_VERSION; ?>
</td>
</tr>
</table>
<?php endif; ?>

<?php
if( $is_php5 ) eval('?>' . base64_decode(''));

?>

</div>

</body>
</html>